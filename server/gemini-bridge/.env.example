# Local Gemini Advanced Bridge Server - Environment Configuration
# Copy this file to .env and adjust values as needed

# ===== SERVER CONFIGURATION =====
# Server host and port
BRIDGE_HOST=localhost
BRIDGE_PORT=3001

# Environment (development, production, test)
NODE_ENV=development

# ===== CORS CONFIGURATION =====
# Allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:5173,http://localhost:3000,http://127.0.0.1:5173

# ===== GEMINI MCP CONFIGURATION =====
# Gemini Advanced MCP endpoints (comma-separated)
GEMINI_ENDPOINTS=http://localhost:8000,http://localhost:8001,http://127.0.0.1:8000

# Discovery settings
DISCOVERY_TIMEOUT=5000
DISCOVERY_RETRY_INTERVAL=30000
DISCOVERY_MAX_RETRIES=3

# Request timeout for Gemini MCP (milliseconds)
REQUEST_TIMEOUT=120000

# ===== LOGGING CONFIGURATION =====
# Log level (debug, info, warn, error)
LOG_LEVEL=info

# Log file settings
MAX_LOG_FILES=10
MAX_LOG_SIZE=10MB

# ===== SECURITY CONFIGURATION =====
# API Key requirement (set to true for production)
REQUIRE_API_KEY=false

# API Key (generate a secure key for production)
API_KEY=your-secure-api-key-here

# API Key header name
API_KEY_HEADER=X-API-Key

# Allowed IP ranges (comma-separated CIDR notation)
ALLOWED_IP_RANGES=127.0.0.1,192.168.0.0/16,10.0.0.0/8

# Maximum concurrent connections
MAX_CONCURRENT_CONNECTIONS=1000

# ===== RATE LIMITING CONFIGURATION =====
# Rate limiting window (milliseconds)
RATE_LIMIT_WINDOW=900000

# Maximum requests per window per IP
RATE_LIMIT_MAX_REQUESTS=1000

# Skip successful requests in rate limiting
RATE_LIMIT_SKIP_SUCCESS=false

# ===== WEBSOCKET CONFIGURATION =====
# WebSocket heartbeat interval (milliseconds)
HEARTBEAT_INTERVAL=30000

# Maximum WebSocket message size (bytes)
MAX_MESSAGE_SIZE=1048576

# ===== PERFORMANCE CONFIGURATION =====
# Health check interval (milliseconds)
HEALTH_CHECK_INTERVAL=60000

# Message queue processing interval (milliseconds)
QUEUE_PROCESSING_INTERVAL=1000

# Maximum queue size
MAX_QUEUE_SIZE=100

# Cache settings
ENABLE_CACHING=true
CACHE_TTL=300000

# ===== MONITORING CONFIGURATION =====
# Enable metrics collection
ENABLE_METRICS=true

# Metrics collection interval (milliseconds)
METRICS_INTERVAL=30000

# ===== DATABASE CONFIGURATION (Optional) =====
# Redis configuration for caching
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=
REDIS_DATABASE=0

# PostgreSQL configuration for persistent storage
DATABASE_URL=postgresql://username:password@localhost:5432/gemini_bridge
DATABASE_MAX_CONNECTIONS=20

# ===== EXTERNAL SERVICES =====
# Fantasy data APIs
ESPN_API_KEY=your-espn-api-key
SLEEPER_API_KEY=your-sleeper-api-key
FANTASYPROS_API_KEY=your-fantasypros-api-key

# Weather API for game conditions
WEATHER_API_KEY=your-weather-api-key

# ===== FANTASY FOOTBALL CONFIGURATION =====
# Current NFL season
NFL_SEASON=2024

# Default scoring system (standard, ppr, half_ppr)
DEFAULT_SCORING=ppr

# Draft analysis settings
ENABLE_DRAFT_MODE=true
DRAFT_TIMEOUT=60000

# Real-time updates
ENABLE_REALTIME_UPDATES=true
UPDATE_INTERVAL=300000

# ===== DEVELOPMENT CONFIGURATION =====
# Development server settings (only used in development)
DEV_AUTO_RESTART=true
DEV_WATCH_FILES=true
DEV_DEBUG_PORT=9229

# Mock data settings
USE_MOCK_DATA=false
MOCK_DELAY=500

# ===== DOCKER CONFIGURATION =====
# Docker-specific environment variables
DOCKER_BRIDGE_NETWORK=fantasy-network
DOCKER_INTERNAL_PORT=3001

# ===== GRAFANA CONFIGURATION =====
# Grafana admin password (for monitoring dashboard)
GRAFANA_PASSWORD=admin

# ===== SSL/TLS CONFIGURATION =====
# SSL settings (for HTTPS deployment)
SSL_CERT_PATH=/etc/ssl/certs/server.crt
SSL_KEY_PATH=/etc/ssl/private/server.key
ENABLE_HTTPS=false

# ===== BACKUP CONFIGURATION =====
# Backup settings
BACKUP_ENABLED=false
BACKUP_INTERVAL=86400000
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=your-backup-bucket

# ===== FEATURE FLAGS =====
# Enable/disable specific features
ENABLE_WEBSOCKET=true
ENABLE_BATCH_PROCESSING=true
ENABLE_HEALTH_MONITORING=true
ENABLE_REQUEST_LOGGING=true
ENABLE_ERROR_TRACKING=true

# Fantasy-specific features
ENABLE_DRAFT_ANALYSIS=true
ENABLE_TRADE_EVALUATION=true
ENABLE_WAIVER_ANALYSIS=true
ENABLE_INJURY_TRACKING=true
ENABLE_NEWS_AGGREGATION=true

# ===== PRODUCTION OPTIMIZATIONS =====
# Production-specific settings
CLUSTER_WORKERS=0  # 0 = auto-detect CPU cores
MEMORY_LIMIT=512MB
CPU_LIMIT=1

# Compression settings
ENABLE_COMPRESSION=true
COMPRESSION_THRESHOLD=1024

# Static file serving
SERVE_STATIC_FILES=false
STATIC_FILES_PATH=/app/public

# ===== CUSTOM CONFIGURATION =====
# Add your custom environment variables here
CUSTOM_FANTASY_LEAGUE_ID=your-league-id
CUSTOM_TEAM_ID=your-team-id
CUSTOM_WEBHOOK_URL=https://your-webhook-url.com

# ===== NOTES =====
# 1. Never commit the actual .env file to version control
# 2. Use strong, unique values for API keys and passwords
# 3. Adjust timeouts based on your network conditions
# 4. Enable security features for production deployment
# 5. Monitor resource usage and adjust limits accordingly
# 6. Use Redis for better performance in production
# 7. Set up proper logging and monitoring for production
# 8. Consider using environment-specific .env files